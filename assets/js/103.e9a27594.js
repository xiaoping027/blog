(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{307:function(t,s,a){"use strict";a.r(s);var n=a(10),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"理解原型-原型链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#理解原型-原型链"}},[t._v("#")]),t._v(" 理解原型&原型链")]),t._v(" "),a("h2",{attrs:{id:"函数即对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数即对象"}},[t._v("#")]),t._v(" 函数即对象")]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("JS")]),t._v(" 里，函数就是 "),a("code",[t._v("Function")]),t._v(" 函数的实例对象")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" person1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" person2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" Person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ("function");')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" person1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" person1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ("object");')]),t._v("\nperson1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ƒ Person() {}")]),t._v("\n")])])]),a("p",[t._v("上面代码 "),a("code",[t._v("Person( )")]),t._v("就是 "),a("code",[t._v("person1")]),t._v(" 和 "),a("code",[t._v("person2")]),t._v(" 的构造函数。")]),t._v(" "),a("p",[t._v("可以通过"),a("code",[t._v("对象.constructor")]),t._v("拿到创建该实例对象的构造函数")]),t._v(" "),a("p",[a("code",[t._v("constructor")]),t._v(" 是一种用于创建和初始化 class 创建的对象的特殊方法.")]),t._v(" "),a("p",[t._v("如果没有显式指定构造方法，则会添加默认的 "),a("code",[t._v("constructor")]),t._v(" 方法。")]),t._v(" "),a("p",[t._v("如果不指定一个构造函数("),a("code",[t._v("constructor")]),t._v(")方法, 则使用一个默认的构造函数("),a("code",[t._v("constructor")]),t._v(")。")]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Classes/constructor",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Classes/constructor"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"prototype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prototype"}},[t._v("#")]),t._v(" prototype")]),t._v(" "),a("p",[t._v("几乎所有的 "),a("code",[t._v("JavaScript")]),t._v(" 对象都是 "),a("code",[t._v("Object")]),t._v(" 的实例；一个典型的对象继承了 "),a("code",[t._v("Object.prototype")]),t._v(" 的属性（包括方法），尽管这些属性可能被遮蔽（亦称为覆盖）")]),t._v(" "),a("p",[a("code",[t._v("prototype")]),t._v(" 对象用于放某同一类型实例的共享属性和方法，实质上是为了内存着想。")]),t._v(" "),a("h2",{attrs:{id:"new-运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#new-运算符"}},[t._v("#")]),t._v(" new 运算符")]),t._v(" "),a("p",[t._v("new 运算符创建一个用户定义的对象类型的实例或具有构造函数的内置对象的实例。new 关键字会进行如下的操作：")]),t._v(" "),a("ul",[a("li",[t._v("创建一个空的简单 JavaScript 对象（即{}）；")]),t._v(" "),a("li",[t._v("链接该对象（即设置该对象的构造函数(例如 Object.prototype)）到另一个对象 ；")]),t._v(" "),a("li",[t._v("将步骤 1 新创建的对象作为 this 的上下文 ；")]),t._v(" "),a("li",[t._v("如果该函数没有返回对象，则返回 this。")])]),t._v(" "),a("p",[t._v("自己实现 "),a("code",[t._v("new")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("Con"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setPrototypeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Con")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// obj.__proto__ = Con.prototype")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Con")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("首先函数接受不定量的参数，第一个参数为构造函数，接下来的参数被构造函数使用")]),t._v(" "),a("li",[t._v("然后内部创建一个空对象 obj")]),t._v(" "),a("li",[t._v("因为 obj 对象需要访问到构造函数原型链上的属性，所以我们通过 setPrototypeOf 将两者联系起来。这段代码等同于 obj."),a("strong",[t._v("proto")]),t._v(" = Con.prototype")]),t._v(" "),a("li",[t._v("将 obj 绑定到构造函数上，并且传入剩余的参数")]),t._v(" "),a("li",[t._v("判断构造函数返回值是否为对象，如果为对象就使用构造函数返回的值，否则使用 obj，这样就实现了忽略构造函数返回的原始值")])]),t._v(" "),a("h2",{attrs:{id:"proto"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#proto"}},[t._v("#")]),t._v(" "),a("code",[t._v("__proto__")])]),t._v(" "),a("p",[t._v("是每个对象(除 "),a("code",[t._v("null")]),t._v(" 外)都会有的属性，叫做"),a("code",[t._v("__proto__")]),t._v("，这个属性会指向该对象的原型")]),t._v(" "),a("p",[a("code",[t._v("__proto__")]),t._v("指向原型对象，原型对象中的"),a("code",[t._v("constructor")]),t._v("又指向构造函数")])])}),[],!1,null,null,null);s.default=e.exports}}]);
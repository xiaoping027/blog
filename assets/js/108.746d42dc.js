(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{312:function(v,_,e){"use strict";e.r(_);var s=e(10),t=Object(s.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"前端安全"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端安全"}},[v._v("#")]),v._v(" 前端安全")]),v._v(" "),e("h2",{attrs:{id:"xss-攻击"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xss-攻击"}},[v._v("#")]),v._v(" XSS 攻击")]),v._v(" "),e("p",[e("code",[v._v("XSS")]),v._v(" 是一种经常出现在 "),e("code",[v._v("web")]),v._v(" 应用中的计算机安全漏洞，它允许恶意 "),e("code",[v._v("web")]),v._v(" 用户将代码植入到提供给其它用户使用的页面中。")]),v._v(" "),e("ul",[e("li",[v._v("1、盗取各类用户帐号，如机器登录帐号、用户网银帐号、各类管理员帐号")]),v._v(" "),e("li",[v._v("2、控制企业数据，包括读取、篡改、添加、删除企业敏感数据的能力")]),v._v(" "),e("li",[v._v("3、盗窃企业重要的具有商业价值的资料")]),v._v(" "),e("li",[v._v("4、非法转账")]),v._v(" "),e("li",[v._v("5、强制发送电子邮件")]),v._v(" "),e("li",[v._v("6、网站挂马")]),v._v(" "),e("li",[v._v("7、控制受害者机器向其它网站发起攻击")])]),v._v(" "),e("p",[v._v("XSS 攻击的具体表现：")]),v._v(" "),e("ul",[e("li",[v._v("代码注入")]),v._v(" "),e("li",[v._v("append 的利用")]),v._v(" "),e("li",[v._v("img 标签的再次利用")]),v._v(" "),e("li",[v._v("HTML 的节点内容或属性")]),v._v(" "),e("li",[v._v("javascript 代码")]),v._v(" "),e("li",[v._v("富文本")])]),v._v(" "),e("h2",{attrs:{id:"csrf-攻击"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#csrf-攻击"}},[v._v("#")]),v._v(" CSRF 攻击")]),v._v(" "),e("p",[e("code",[v._v("CSRF(Cross-site request forgery 跨站请求伪造，也被称为“One Click Attack”或者 Session Riding，通常缩写为 CSRF 或者 XSRF")]),v._v("，是一种对网站的恶意利用。其实就是网站中的一些提交行为，被黑客利用，你在访问黑客的网站的时候，进行的操作，会被操作到其他网站上(如：你所使用的网络银行的网站)。")]),v._v(" "),e("p",[v._v("举个例子，你登录购物网站 A 之后点击一个恶意链接 B，B 请求了网站 A 的下单接口，结果是你在网站 A 的帐号真的会生成一个订单。其背后的原理是：网站 B 通过表单、get 请求来伪造网站 A 的请求，这时候请求会带上网站 A 的 cookies，若登录态是保存在 cookies 中，则实现了伪造攻击。")]),v._v(" "),e("ul",[e("li",[v._v("用户的登录态被盗用")]),v._v(" "),e("li",[v._v("完成业务的请求")])]),v._v(" "),e("p",[v._v("解决方案：")]),v._v(" "),e("ul",[e("li",[v._v("增加验证码 CSRF 的一个特点是伪造请求不经过网站 A,那么我们可以通过增加网站 A 的验证手段，例如增加图形验证码或短信验证码等等，只有通过验证的请求才算合法。但是这种方案拥有两个局限性，一个是增加开发成本，另外一个是降低用户体验")]),v._v(" "),e("li",[v._v("cookies 设置 sameSite 对于 CSRF 的第二个特点伪造请求的域名不是网站 A,那么通过限制 cookies 不被其他域名网站使用,来达到防御的目的")]),v._v(" "),e("li",[v._v("验证 referer 第二个特点同时会造成伪造请求的 referer 不是网站 A，因此我们可以限制不信任的请求来源。")]),v._v(" "),e("li",[v._v("验证 csrf token 服务端随机生成 token，保存在服务端 session 中，同时保存到客户端中，客户端发送请求时，把 token 带到 HTTP 请求头或参数中，服务端接收到请求，验证请求中的 token 与 session 中的是否一致。")]),v._v(" "),e("li",[v._v("更换登录态方案 因为 CSRF 本质是伪造请求携带了保存在 cookies 中的信息，所以对 session 机制的登录态比较不利，如果更换 JWT（JSON Web Token）方案，其 token 信息一般设置到 HTTP 头部的，所以可以防御 CSRF 攻击。")])])])}),[],!1,null,null,null);_.default=t.exports}}]);
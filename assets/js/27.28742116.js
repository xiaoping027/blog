(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{231:function(t,e,o){"use strict";o.r(e);var r=o(10),v=Object(r.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"react-router-实现原理"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#react-router-实现原理"}},[t._v("#")]),t._v(" React-Router 实现原理")]),t._v(" "),o("p",[t._v("整个"),o("code",[t._v("react-router")]),t._v("是基于"),o("code",[t._v("history")]),t._v("实现的，很多方法都是进一步包装的"),o("code",[t._v("history")]),t._v("方法，所以先了解下"),o("code",[t._v("history")])]),t._v(" "),o("p",[o("code",[t._v("Window.history")]),t._v("是一个只读属性，用来获取"),o("code",[t._v("History")]),t._v(" 对象的引用，"),o("code",[t._v("History")]),t._v(" 对象提供了操作浏览器会话历史（浏览器地址栏中访问的页面，以及当前页面中通过框架加载的页面）的接口。")]),t._v(" "),o("p",[o("code",[t._v("history")]),t._v("允许操作浏览器的曾经在标签页或者框架里访问的会话历史记录")]),t._v(" "),o("h2",{attrs:{id:"属性"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),o("ul",[o("li",[o("p",[t._v("History.length\n返回一个整数，该整数表示会话历史中元素的数目，包括当前加载的页。例如，在一个新的选项卡加载的一个页面中，这个属性返回 1。")])]),t._v(" "),o("li",[o("p",[t._v("History.state\n返回一个表示历史堆栈顶部的状态的值。这是一种可以不必等待"),o("code",[t._v("popstate")]),t._v(" 事件而查看状态而的方式。")])])]),t._v(" "),o("h2",{attrs:{id:"方法"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),o("ul",[o("li",[o("p",[t._v("History.back()\n前往上一页, 用户可点击浏览器左上角的返回按钮模拟此方法. 等价于 "),o("code",[t._v("history.go(-1)")]),t._v(".")])]),t._v(" "),o("li",[o("p",[t._v("History.forward()\n在浏览器历史记录里前往下一页，用户可点击浏览器左上角的前进按钮模拟此方法. 等价于 "),o("code",[t._v("history.go(1)")]),t._v(".")])]),t._v(" "),o("li",[o("p",[t._v("History.go()\n通过当前页面的相对位置从浏览器历史记录( 会话记录 )加载页面。比如：参数为-1 的时候为上一页，参数为 1 的时候为下一页. 当整数参数超出界限时( 译者注:原文为 When integerDelta is out of bounds )，例如: 如果当前页为第一页，前面已经没有页面了，我传参的值为-1，那么这个方法没有任何效果也不会报错。调用没有参数的 go() 方法或者不是整数的参数时也没有效果。( 这点与支持字符串作为 url 参数的 IE 有点不同)。")])]),t._v(" "),o("li",[o("p",[t._v("History.pushState()\n按指定的名称和 URL（如果提供该参数）将数据 push 进会话历史栈，数据被 DOM 进行不透明处理；你可以指定任何可以被序列化的 javascript 对象")])]),t._v(" "),o("li",[o("p",[t._v("History.replaceState()\n按指定的数据，名称和 URL(如果提供该参数)，更新历史栈上最新的入口。这个数据被 DOM 进行了不透明处理。你可以指定任何可以被序列化的 javascript 对象。")])])]),t._v(" "),o("h2",{attrs:{id:"popstate-事件"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#popstate-事件"}},[t._v("#")]),t._v(" popstate 事件")]),t._v(" "),o("p",[t._v("当活动历史记录条目更改时，将触发"),o("code",[t._v("popstate")]),t._v("事件。如果被激活的历史记录条目是通过对"),o("code",[t._v("history.pushState（）")]),t._v("的调用创建的，或者受到对"),o("code",[t._v("history.replaceState（）")]),t._v("的调用的影响，"),o("code",[t._v("popstate")]),t._v("事件的"),o("code",[t._v("state")]),t._v("属性包含历史条目的状态对象的副本。")]),t._v(" "),o("p",[t._v("需要注意的是调用"),o("code",[t._v("history.pushState()")]),t._v("或"),o("code",[t._v("history.replaceState()")]),t._v("不会触发"),o("code",[t._v("popstate")]),t._v("事件。只有在做出浏览器动作时，才会触发该事件，如用户点击浏览器的回退按钮（或者在"),o("code",[t._v("Javascript")]),t._v("代码中调用"),o("code",[t._v("history.back()")]),t._v("或者"),o("code",[t._v("history.forward()方法）")])]),t._v(" "),o("p",[t._v("不同的浏览器在加载页面时处理"),o("code",[t._v("popstate")]),t._v("事件的形式存在差异。页面加载时"),o("code",[t._v("Chrome")]),t._v("和"),o("code",[t._v("Safari")]),t._v("通常会触发"),o("code",[t._v("(emit)popstate")]),t._v("事件，但"),o("code",[t._v("Firefox")]),t._v("则不会。")]),t._v(" "),o("p",[t._v("在用户重新载入页面时，"),o("code",[t._v("popstate")]),t._v(" 事件并不会触发，因此，想要获取会话浏览历史的当前记录的状态对象，只能通过 "),o("code",[t._v("window.history.state")]),t._v(" 属性。")]),t._v(" "),o("blockquote",[o("p",[o("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/History",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://developer.mozilla.org/zh-CN/docs/Web/API/History"),o("OutboundLink")],1)]),t._v(" "),o("p",[o("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/popstate_event",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://developer.mozilla.org/zh-CN/docs/Web/API/Window/popstate_event"),o("OutboundLink")],1)]),t._v(" "),o("p",[o("a",{attrs:{href:"https://github.com/Sam618/Blog/issues/3",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/Sam618/Blog/issues/3"),o("OutboundLink")],1)]),t._v(" "),o("p",[o("a",{attrs:{href:"https://github.com/whinc/blog/issues/13",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/whinc/blog/issues/13"),o("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=v.exports}}]);
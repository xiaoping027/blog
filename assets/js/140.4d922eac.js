(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{342:function(s,t,a){"use strict";a.r(t);var h=a(10),v=Object(h.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"git-stash-学习"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-stash-学习"}},[s._v("#")]),s._v(" git stash 学习")]),s._v(" "),a("p",[a("code",[s._v("stash")]),s._v("：储藏")]),s._v(" "),a("p",[a("code",[s._v("git stash")]),s._v("的使用场景： 当前分支下的某几个文件，前面的修改部分已经放在暂存区，目前在工作区还在进行修改，如果此时需要在当前文件下进行紧急修复 bug，就需要把工作区正在修改的文件 "),a("code",[s._v("stash")]),s._v(" 暂存起来，进行 "),a("code",[s._v("bug")]),s._v(" 修复工作，在完成 "),a("code",[s._v("bug")]),s._v(" 修复工作后，提交 "),a("code",[s._v("commit")]),s._v("，将暂存的工作区文件内容拿出来继续.")]),s._v(" "),a("h2",{attrs:{id:"git-stash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-stash"}},[s._v("#")]),s._v(" git stash")]),s._v(" "),a("p",[a("code",[s._v('git stash save "save message"')]),s._v(": 执行存储时，添加备注，方便查找，只有 git stash 也要可以的，但查找时不方便识别。")]),s._v(" "),a("h2",{attrs:{id:"git-stash-list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-stash-list"}},[s._v("#")]),s._v(" git stash list")]),s._v(" "),a("p",[s._v("查看 "),a("code",[s._v("stash")]),s._v(" 了哪些存储")]),s._v(" "),a("h2",{attrs:{id:"git-stash-show"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-stash-show"}},[s._v("#")]),s._v(" git stash show")]),s._v(" "),a("p",[s._v("显示做了哪些改动，默认 "),a("code",[s._v("show")]),s._v(" 第一个存储,如果要显示其他存贮，后面加 "),a("code",[s._v("stash@{\\$num}")]),s._v("，比如第二个 "),a("code",[s._v("git stash show stash@{1}")])]),s._v(" "),a("h2",{attrs:{id:"git-stash-show-p"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-stash-show-p"}},[s._v("#")]),s._v(" git stash show -p")]),s._v(" "),a("p",[s._v("显示第一个存储的改动，如果想显示其他存存储，命令："),a("code",[s._v("git stash show stash@{\\$num} -p")]),s._v(" ，比如第二个："),a("code",[s._v("git stash show stash@{1} -p")])]),s._v(" "),a("h2",{attrs:{id:"git-stash-apply"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-stash-apply"}},[s._v("#")]),s._v(" git stash apply")]),s._v(" "),a("p",[s._v("应用某个存储,但不会把存储从存储列表中删除，默认使用第一个存储,即 "),a("code",[s._v("stash@{0}")]),s._v("，如果要使用其他个，"),a("code",[s._v("git stash apply stash@{\\$num}")]),s._v(" ， 比如第二个："),a("code",[s._v("git stash apply stash@{1}")])]),s._v(" "),a("h2",{attrs:{id:"git-stash-pop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-stash-pop"}},[s._v("#")]),s._v(" git stash pop")]),s._v(" "),a("p",[s._v("命令恢复之前缓存的工作目录，将缓存堆栈中的对应 "),a("code",[s._v("stash")]),s._v(" 删除，并将对应修改应用到当前的工作目录下,默认为第一个 "),a("code",[s._v("stash")]),s._v(",即 "),a("code",[s._v("stash@{0}")]),s._v("，如果要应用并删除其他 "),a("code",[s._v("stash")]),s._v("，命令："),a("code",[s._v("git stash pop stash@{\\$num}")]),s._v(" ，比如应用并删除第二个："),a("code",[s._v("git stash pop stash@{1}")])]),s._v(" "),a("p",[a("code",[s._v("git stash pop")]),s._v(" 功能与 "),a("code",[s._v("git stash apply")]),s._v(" 大致一样，区别如下：")]),s._v(" "),a("ul",[a("li",[s._v("pop 正如它的名字，将储藏内容弹出并应用，储藏内容会被从储藏列表中删除。")]),s._v(" "),a("li",[s._v("apply 仅仅是应用，不会将储藏从储藏列表中删除。")])]),s._v(" "),a("h2",{attrs:{id:"git-stash-drop-stash-num"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-stash-drop-stash-num"}},[s._v("#")]),s._v(" git stash drop stash@{$num}")]),s._v(" "),a("p",[s._v("丢弃 "),a("code",[s._v("stash@{\\$num}")]),s._v("存储，从列表中删除这个存储")]),s._v(" "),a("h2",{attrs:{id:"git-stash-clear"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-stash-clear"}},[s._v("#")]),s._v(" git stash clear")]),s._v(" "),a("p",[s._v("删除所有缓存的 "),a("code",[s._v("stash")])]),s._v(" "),a("h2",{attrs:{id:"git-stash-branch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-stash-branch"}},[s._v("#")]),s._v(" git stash branch")]),s._v(" "),a("p",[s._v("可以运行 "),a("code",[s._v("git stash branch")]),s._v(" 创建一个新分支，检出储藏工作时所在的提交，重新在那应用工作，然后在应用成功后扔掉储藏.")]),s._v(" "),a("h2",{attrs:{id:"注意点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意点"}},[s._v("#")]),s._v(" 注意点")]),s._v(" "),a("p",[a("code",[s._v("git add")]),s._v(" 只是把文件加到 "),a("code",[s._v("git")]),s._v(" 版本控制里，并不等于就被 "),a("code",[s._v("stash")]),s._v(" 起来了，"),a("code",[s._v("git add")]),s._v(" 和 "),a("code",[s._v("git stash")]),s._v(" 没有必然的关系，但是执行 "),a("code",[s._v("git stash")]),s._v(" 能正确存储的前提是文件必须在 "),a("code",[s._v("git")]),s._v(" 版本控制中才行。")])])}),[],!1,null,null,null);t.default=v.exports}}]);